/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.27.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
import { Coin } from "@cosmjs/amino";
import { MsgExecuteContractEncodeObject } from "cosmwasm";
import { Uint128, SwapInfo } from "./Periphery.types";
export interface PeripheryMessage {
    contractAddress: string;
    sender: string;
    mintExactAmountOut: ({ coreAddr, inputAsset, outputAmount, swapInfo }: {
        coreAddr: string;
        inputAsset: string;
        outputAmount: Uint128;
        swapInfo: SwapInfo[];
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    burnExactAmountIn: ({ coreAddr, minOutputAmount, outputAsset, swapInfo }: {
        coreAddr: string;
        minOutputAmount: Uint128;
        outputAsset: string;
        swapInfo: SwapInfo[];
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
}
export declare class PeripheryMessageComposer implements PeripheryMessage {
    sender: string;
    contractAddress: string;
    constructor(sender: string, contractAddress: string);
    mintExactAmountOut: ({ coreAddr, inputAsset, outputAmount, swapInfo }: {
        coreAddr: string;
        inputAsset: string;
        outputAmount: Uint128;
        swapInfo: SwapInfo[];
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    burnExactAmountIn: ({ coreAddr, minOutputAmount, outputAsset, swapInfo }: {
        coreAddr: string;
        minOutputAmount: Uint128;
        outputAsset: string;
        swapInfo: SwapInfo[];
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
}
//# sourceMappingURL=Periphery.message-composer.d.ts.map