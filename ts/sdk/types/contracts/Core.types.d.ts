/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.16.5.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
export type Uint128 = string;
export interface InstantiateMsg {
    decimal: number;
    denom: string;
    gov: string;
    initial_assets: Coin[];
    reserve_denom: string;
}
export interface Coin {
    amount: Uint128;
    denom: string;
    [k: string]: unknown;
}
export type ExecuteMsg = {
    mint: {
        amount: Uint128;
        receiver?: string | null;
    };
} | {
    burn: {};
} | {
    gov: GovMsg;
} | {
    rebalance: RebalanceMsg;
};
export type GovMsg = {
    pause: {
        expires_at: number;
    };
} | {
    release: {};
} | {
    update_reserve_denom: {
        new_denom: string;
    };
} | {
    update_trade_info: {
        cooldown: number;
        denom: string;
        routes: SwapRoutes;
    };
};
export type SwapRoutes = SwapRoute[];
export type RebalanceMsg = {
    init: {
        deflation: Coin[];
        inflation: Coin[];
        manager: string;
    };
} | {
    trade: {
        amount: Uint128;
        denom: string;
    };
} | {
    finalize: {};
};
export interface SwapRoute {
    pool_id: number;
    token_denom: string;
}
export type QueryMsg = {
    get_config: {};
} | {
    get_pause_info: {};
} | {
    get_portfolio: {};
};
export type Addr = string;
export interface GetConfigResponse {
    decimal: number;
    denom: string;
    gov: Addr;
    reserve_denom: string;
}
export interface GetPauseInfoResponse {
    expires_at?: number | null;
    paused: boolean;
}
export interface GetPortfolioResponse {
    assets: Coin[];
    total_supply: Uint128;
    units: Coin[];
}
//# sourceMappingURL=Core.types.d.ts.map