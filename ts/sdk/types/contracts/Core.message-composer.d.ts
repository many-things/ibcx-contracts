/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.27.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
import { MsgExecuteContractEncodeObject } from "cosmwasm";
import { Uint128, GovMsg, RebalanceMsg, Coin } from "./Core.types";
export interface CoreMessage {
    contractAddress: string;
    sender: string;
    mint: ({ amount, receiver, refundTo }: {
        amount: Uint128;
        receiver?: string;
        refundTo?: string;
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    burn: ({ redeemTo }: {
        redeemTo?: string;
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    realize: (funds?: Coin[]) => MsgExecuteContractEncodeObject;
    gov: (govMsg: GovMsg, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    rebalance: (rebalanceMsg: RebalanceMsg, funds?: Coin[]) => MsgExecuteContractEncodeObject;
}
export declare class CoreMessageComposer implements CoreMessage {
    sender: string;
    contractAddress: string;
    constructor(sender: string, contractAddress: string);
    mint: ({ amount, receiver, refundTo }: {
        amount: Uint128;
        receiver?: string | undefined;
        refundTo?: string | undefined;
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    burn: ({ redeemTo }: {
        redeemTo?: string | undefined;
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    realize: (funds?: Coin[]) => MsgExecuteContractEncodeObject;
    gov: (govMsg: GovMsg, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    rebalance: (rebalanceMsg: RebalanceMsg, funds?: Coin[]) => MsgExecuteContractEncodeObject;
}
//# sourceMappingURL=Core.message-composer.d.ts.map