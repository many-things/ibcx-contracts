/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.16.5.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
export interface InstantiateMsg {
}
export type ExecuteMsg = {
    regsiter: {
        denom: string;
        label?: string | null;
        merkle_root: string;
    };
} | {
    fund: {
        id: AirdropId;
    };
} | {
    claim: {
        amount: Uint128;
        beneficiary?: string | null;
        id: AirdropId;
        merkle_proof: string[];
    };
};
export type AirdropId = {
    id: number;
} | {
    label: string;
};
export type Uint128 = string;
export type QueryMsg = {
    get_airdrop: {
        id: AirdropId;
    };
} | {
    list_airdrops: {
        limit?: number | null;
        order?: RangeOrder | null;
        start_after: AirdropIdOptional;
    };
} | {
    latest_airdrop_id: {};
} | {
    get_claim: {
        account: string;
        id: AirdropId;
    };
} | {
    list_claims: {
        id: AirdropId;
        limit?: number | null;
        order?: RangeOrder | null;
        start_after?: string | null;
    };
} | {
    check_qualification: {
        amount: Uint128;
        beneficiary: string;
        id: AirdropId;
        merkle_proof: string[];
    };
};
export type RangeOrder = "asc" | "desc";
export type AirdropIdOptional = {
    id: number | null;
} | {
    label: string | null;
};
export interface MigrateMsg {
}
export type CheckQualificationResponse = boolean;
export interface GetAirdropResponse {
    denom: string;
    id: number;
    label?: string | null;
    total_amount: Uint128;
    total_claimed: Uint128;
}
export type Addr = string;
export interface GetClaimResponse {
    account: Addr;
    amount: Uint128;
}
export type LatestAirdropResponse = number;
export type ListAirdropsResponse = GetAirdropResponse[];
export type ListClaimsResponse = GetClaimResponse[];
//# sourceMappingURL=Faucet.types.d.ts.map