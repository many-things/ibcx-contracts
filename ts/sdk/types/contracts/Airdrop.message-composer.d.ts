/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.27.0.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */
import { Coin } from "@cosmjs/amino";
import { MsgExecuteContractEncodeObject } from "cosmwasm";
import { RegisterPayload, AirdropId, ClaimPayload } from "./Airdrop.types";
export interface AirdropMessage {
    contractAddress: string;
    sender: string;
    register: (registerPayload: RegisterPayload, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    fund: (airdropId: AirdropId, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    claim: (claimPayload: ClaimPayload, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    close: (airdropId: AirdropId, funds?: Coin[]) => MsgExecuteContractEncodeObject;
}
export declare class AirdropMessageComposer implements AirdropMessage {
    sender: string;
    contractAddress: string;
    constructor(sender: string, contractAddress: string);
    register: (registerPayload: RegisterPayload, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    fund: (airdropId: AirdropId, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    claim: (claimPayload: ClaimPayload, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    close: (airdropId: AirdropId, funds?: Coin[]) => MsgExecuteContractEncodeObject;
}
//# sourceMappingURL=Airdrop.message-composer.d.ts.map