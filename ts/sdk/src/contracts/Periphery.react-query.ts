/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.27.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

import { UseQueryOptions, useQuery } from "@tanstack/react-query";
import { InstantiateMsg, ExecuteMsg, Uint128, SwapInfosCompact, SwapInfoCompact, QueryMsg, SwapInfo, RouteKey, SwapRoutes, SwapRoute, MigrateMsg, SimulateBurnExactAmountInResponse, Coin, SimulateMintExactAmountOutResponse } from "./Periphery.types";
import { PeripheryQueryClient } from "./Periphery.client";
export interface PeripheryReactQuery<TResponse, TData = TResponse> {
  client: PeripheryQueryClient;
  options?: Omit<UseQueryOptions<TResponse, Error, TData>, "'queryKey' | 'queryFn' | 'initialData'"> & {
    initialData?: undefined;
  };
}
export interface PeripherySimulateBurnExactAmountInQuery<TData> extends PeripheryReactQuery<SimulateBurnExactAmountInResponse, TData> {
  args: {
    coreAddr: string;
    inputAmount: Uint128;
    outputAsset: string;
    swapInfo: SwapInfo[];
  };
}
export function usePeripherySimulateBurnExactAmountInQuery<TData = SimulateBurnExactAmountInResponse>({
  client,
  args,
  options
}: PeripherySimulateBurnExactAmountInQuery<TData>) {
  return useQuery<SimulateBurnExactAmountInResponse, Error, TData>(["peripherySimulateBurnExactAmountIn", client.contractAddress, JSON.stringify(args)], () => client.simulateBurnExactAmountIn({
    coreAddr: args.coreAddr,
    inputAmount: args.inputAmount,
    outputAsset: args.outputAsset,
    swapInfo: args.swapInfo
  }), options);
}
export interface PeripherySimulateMintExactAmountOutQuery<TData> extends PeripheryReactQuery<SimulateMintExactAmountOutResponse, TData> {
  args: {
    coreAddr: string;
    inputAsset: string;
    outputAmount: Uint128;
    swapInfo: SwapInfo[];
  };
}
export function usePeripherySimulateMintExactAmountOutQuery<TData = SimulateMintExactAmountOutResponse>({
  client,
  args,
  options
}: PeripherySimulateMintExactAmountOutQuery<TData>) {
  return useQuery<SimulateMintExactAmountOutResponse, Error, TData>(["peripherySimulateMintExactAmountOut", client.contractAddress, JSON.stringify(args)], () => client.simulateMintExactAmountOut({
    coreAddr: args.coreAddr,
    inputAsset: args.inputAsset,
    outputAmount: args.outputAmount,
    swapInfo: args.swapInfo
  }), options);
}